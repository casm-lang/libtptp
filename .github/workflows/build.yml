#
#   Copyright (C) 2017-2019 CASM Organization <https://casm-lang.org>
#   All rights reserved.
#
#   Developed by: Philipp Paulweber
#                 Jakob Moosbrugger
#                 <https://github.com/casm-lang/libtptp>
#
#   This file is part of libtptp.
#
#   libtptp is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   libtptp is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with libtptp. If not, see <http://www.gnu.org/licenses/>.
#
#   Additional permission under GNU GPL version 3 section 7
#
#   libtptp is distributed under the terms of the GNU General Public License
#   with the following clarification and special exception: Linking libtptp
#   statically or dynamically with other modules is making a combined work
#   based on libtptp. Thus, the terms and conditions of the GNU General
#   Public License cover the whole combination. As a special exception,
#   the copyright holders of libtptp give you permission to link libtptp
#   with independent modules to produce an executable, regardless of the
#   license terms of these independent modules, and to copy and distribute
#   the resulting executable under terms of your choice, provided that you
#   also meet, for each linked independent module, the terms and conditions
#   of the license of that module. An independent module is a module which
#   is not derived from or based on libtptp. If you modify libtptp, you
#   may extend this exception to your version of the library, but you are
#   not obliged to do so. If you do not wish to do so, delete this exception
#   statement from your version.
#

# https://help.github.com/en/articles/virtual-environments-for-github-actions#supported-virtual-environments

name: build

on: [push]

jobs:
  linux-clang-debug:
    strategy:
      matrix:
        os: [ ubuntu-18.04 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Setup
      run:  |
        sudo apt-get install -y libz3-dev
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run:  |
        make C=clang debug-fetch
    - name: Dependencies
      run:  |
        make C=clang debug-deps
    - name: Building
      run:  |
        make C=clang debug-build
    - name: Tests
      run:  |
        make C=clang debug-test
    - name: Benchmark
      run:  |
        make C=clang debug-benchmark

  linux-gcc-coverage:
    strategy:
      matrix:
        os: [ ubuntu-18.04 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Setup
      run:  |
        sudo apt-get install -y libz3-dev
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run:  |
        make C=gcc debug-fetch
    - name: Dependencies
      run:  |
        make C=gcc coverage-deps
    - name: Building
      run:  |
        make C=gcc coverage-build
    - name: Tests
      run:  |
        make C=gcc coverage-test
    - name: Benchmark
      run:  |
        make C=gcc coverage-benchmark
    - name: Coverage
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run:  |
        wget https://codecov.io/bash
        chmod 755 bash
        ./bash

  darwin-clang-debug:
    strategy:
      matrix:
        os: [ macOS-10.14 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Setup
      run:  |
        brew --version
        brew install z3
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run:  |
        make C=clang debug-fetch
    - name: Dependencies
      run:  |
        make C=clang debug-deps
    - name: Building
      run:  |
        make C=clang debug-build
    - name: Tests
      run:  |
        make C=clang debug-test
    - name: Benchmark
      run:  |
        make C=clang debug-benchmark

  darwin-gcc-debug:
    strategy:
      matrix:
        os: [ macOS-10.14 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Setup
      run:  |
        brew --version
        brew install z3
        brew install gcc@9
        ln -s /usr/local/bin/gcc-9 /usr/local/bin/gcc
        ln -s /usr/local/bin/g++-9 /usr/local/bin/g++
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run:  |
        make C=gcc debug-fetch
    - name: Dependencies
      run:  |
        make C=gcc debug-deps
    - name: Building
      run:  |
        make C=gcc debug-build
    - name: Tests
      run:  |
        make C=gcc debug-test
    - name: Benchmark
      run:  |
        make C=gcc debug-benchmark

  windows-gcc-debug:
    strategy:
      matrix:
        os: [ windows-2019 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Setup
      shell: cmd
      run: |
        choco install z3
    - name: Fetching
      shell: cmd
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run:  |
        make C=gcc debug-fetch
    - name: Dependencies
      shell: cmd
      run:  |
        make C=gcc debug-deps
    - name: Building
      shell: cmd
      run:  |
        make C=gcc debug-build
    - name: Tests
      shell: cmd
      run:  |
        make C=gcc debug-test
    - name: Benchmark
      shell: cmd
      run:  |
        make C=gcc debug-benchmark
